import time

def linear_search(the_list, target):
    for index, value in enumerate(the_list):
        if value == target:
            return index
    return -1

def binary_search(the_list, target):
    left = 0
    right = len(the_list) -1
    while left <= right:
        middle = (left + right) // 2
        match = the_list[middle]

        if target == match:
            return middle
        elif target < match:
            right = middle - 1
        else:
            left = middle + 1
    return -1


def linear_measure_time(linear_search, the_list, target):
    start_time = time.time()
    time_result = linear_search(the_list, target)
    end_time = time.time()
    elapsed_time = end_time - start_time
    return time_result, elapsed_time

def binary_measure_time(binary_search, the_list, target):
    start_time = time.time()
    time_result = binary_search(the_list, target)
    end_time = time.time()
    elapsed_time = end_time - start_time
    return time_result, elapsed_time

the_list = list(range(1000))
target = 985
print(f"The list is {len(the_list)} and the target is {target}")
linear_result  = linear_search(the_list, target)
if linear_result != -1:
    print(f"Linear search: The index of {target} is: {linear_result}")
else:
    print(f"Linear search: The index of {target} is not in the list")

binary_result = binary_search(the_list, target)
if binary_result != -1:
    print(f"Binary search: The index of {target} is: {binary_result}")
else:
    print(f"Binary search: The index of {target} is not in the list")

linear_time = linear_measure_time(linear_search, the_list, target)
print(f"The linear search happened in {linear_time[1]:.6f} seconds.")

binary_time = binary_measure_time(binary_search, the_list, target)
print(f"The binary search happened in {binary_time[1]:.6f} seconds.")


the_list = list(range(10000))
target = 9963
print(f"The list is {len(the_list)} and the target is {target}")

linear_result  = linear_search(the_list, target)
if linear_result != -1:
    print(f"Linear search: The index of {target} is: {linear_result}")
else:
    print(f"Linear search: The index of {target} is not in the list")


binary_result = binary_search(the_list, target)
if binary_result != -1:
    print(f"Binary search: The index of {target} is: {binary_result}")
else:
    print(f"Binary search: The index of {target} is not in the list")

linear_time = linear_measure_time(linear_search, the_list, target)
print(f"The linear search happened in {linear_time[1]:.6f} seconds.")

binary_time = binary_measure_time(binary_search, the_list, target)
print(f"The binary search happened in {binary_time[1]:.6f} seconds.")




the_list = list(range(100000))
target = 99568

print(f"The list is {len(the_list)} and the target is {target}")

linear_result  = linear_search(the_list, target)
if linear_result != -1:
    print(f"Linear search: The index of {target} is: {linear_result}")
else:
    print(f"Linear search: The index of {target} is not in the list")


binary_result = binary_search(the_list, target)
if binary_result != -1:
    print(f"Binary search: The index of {target} is: {binary_result}")
else:
    print(f"Binary search: The index of {target} is not in the list")

linear_time = linear_measure_time(linear_search, the_list, target)
print(f"The linear search happened in {linear_time[1]:.6f} seconds.")

binary_time = binary_measure_time(binary_search, the_list, target)
print(f"The binary search happened in {binary_time[1]:.6f} seconds.")

################################################################################

def bubble_sort(the_list2):

# Outer loop to iterate through the list n times
    for n in range(len(the_list2) - 1, 0, -1):

# Inner loop to compare adjacent elements
        for i in range(n):
            if the_list2[i] > the_list2[i + 1]:

# Swap elements if they are in the wrong order
                the_list2[i], the_list2[i + 1] = the_list2[i + 1], the_list2[i]
                swapped = True
        if not swapped:
            break
    return the_list2


# Sample list to be sorted
the_list2 = [145, 892, 67, 431, 78, 999, 236, 12, 543, 234, 876, 450, 301, 789, 645]
print(f"The unsorted list is: {the_list2}")
sorted_bubble = bubble_sort(the_list2)

print(f"The sorted list using bubble sort is: {sorted_bubble}")



